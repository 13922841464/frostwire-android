import groovy.swing.SwingBuilder

apply plugin: "com.android.application"

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:0.13.+"
    }
}

android {

    compileSdkVersion 16
    buildToolsVersion "21.0.2"

    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            res.srcDirs = ['res']
            aidl.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDir 'libs'
            java {

                srcDir "../frostwire-jlibtorrent/src"

                srcDir "../frostwire-common/apache"
                srcDir "../frostwire-common/core"
                srcDir "../frostwire-common/gson"
                srcDir "../frostwire-common/httpserver"
                srcDir "../frostwire-common/jdownloader"
                srcDir "../frostwire-common/jmdns"
                srcDir "../frostwire-common/mp4parser"
                srcDir "../frostwire-common/okhttp"
                srcDir "../frostwire-common/vuze"

                srcDir "src/apollo_player"
                srcDir "src/core"
                srcDir "src/gui"
            }
            resources {
                srcDir "../frostwire-common/mp4parser"
                include "**/*.properties"
                exclude "**/*.java"
            }
        }
    }

    lintOptions {
        //checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "2g"
        jumboMode = true
    }

    signingConfigs {
        release {
            storeFile file("../frostwire-tools/installer_builders/android.keystore/frostwire.keystore")
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    buildTypes {

        release {
            signingConfig signingConfigs.release
        }

        debug {
            ndk {
                abiFilters "armeabi"
                //abiFilters "x86"
            }
        }
    }

    splits {
        abi {
            enable false
            universalApk false
        }
    }

    project.ext.versionCodes = ["armeabi": 1, "armeabi-v7a": 2, "arm64-v8a": 3, "mips": 4, "mips64": 5, "x86": 6, "x86_64": 7]

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.abiFilter, 0) * 1000000 + android.defaultConfig.versionCode
        }
    }
}

dependencies {
    compile ("com.android.support:support-v4:21.0.+") {
        exclude group: "com.android.support", module: "support-annotations"
    }
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(":assembleRelease")) {

        def myKeyAlias = ""
        def myKeyPassword = ""

        if (System.console() == null) {
            new SwingBuilder().edt {
                dialog(modal: true,
                        title: 'Enter keystore data',
                        alwaysOnTop: true,
                        resizable: false,
                        locationRelativeTo: null,
                        pack: true,
                        show: true
                ) {
                    vbox {
                        label(text: "Key Alias:")
                        inputAlias = textField()
                        label(text: "Key Password:")
                        inputPassword = passwordField()
                        button(defaultButton: true, text: 'OK', actionPerformed: {
                            myKeyAlias = inputAlias.text
                            myKeyPassword = new String(inputPassword.password)
                            dispose();
                        })
                    }
                }
            }
        } else {
            myKeyAlias = System.console().readPassword("\nKey Alias: ")
            myKeyAlias = new String(myKeyAlias)
            myKeyPassword = System.console().readPassword("\nKey Password: ")
            myKeyPassword = new String(myKeyPassword)
        }

        android.signingConfigs.release.keyAlias = myKeyAlias
        android.signingConfigs.release.storePassword = myKeyPassword
        android.signingConfigs.release.keyPassword = myKeyPassword
    }
}
